port: 7890
dns:
  enable: true
  listen: 0.0.0.0:53
  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 2400:3200::1
    - 2400:3200:baba::1
  enhanced-mode: fake-ip # or redir-host (not recommended)
  # enhanceed-mode: redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  # use-hosts: true # lookup hosts and return IP record

  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  # fake-ip-filter:
  #   - '*.lan'
  #   - localhost.ptlogin2.qq.com

  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - https://doh.pub/dns-query
    - https://2400:3200::1/dns-query
    - https://107834.alidns.com/dns-query

  fallback:
    - "tls://1.1.1.1:853"
    - "tcp://1.1.1.1:53"
    - 1.1.1.1
    - https://1.1.1.1/dns-query

  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4

prepend-proxy-groups: # 建立策略组
  - name: 🔰 选择节点
    type: select

  - name: 🛑 广告拦截
    type: select
    proxies:
      - DIRECT
      - REJECT
      - 🔰 选择节点

  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - DIRECT
      - 🔰 选择节点

append-proxy-groups:
  - name: ⚖️ 负载均衡-散列
    type: load-balance
    url: "http://www.google.com/generate_204"
    interval: 300
    strategy: consistent-hashing
  - name: ⚖️ 负载均衡-轮询
    type: load-balance
    url: "http://www.google.com/generate_204"
    interval: 300
    strategy: round-robin

# 其他示例
# - name: 分组名
# type: url-test # 自动选择延迟最低的节点，也可填 fallback 节点故障时切换下一个，laod-balance 负载均衡
# url: http://www.gstatic.com/generate_204
# interval: 300
# tolerance: 50

commands:
  - proxy-groups.🔰 选择节点.proxies=[]proxyNames # 向指定策略组添加订阅节点名，也可使用正则包含且不包含：[]proxyNames|^包含((?!排除).)*$ 过滤节点
  - proxy-groups.🔰 选择节点.proxies.0+DIRECT # 向指定分组第一个位置添加 DIRECT 节点名
  - proxy-groups.⚖️ 负载均衡-散列.proxies=[]proxyNames
  - proxy-groups.0.proxies.0+⚖️ 负载均衡-散列
  - proxy-groups.⚖️ 负载均衡-轮询.proxies=[]proxyNames
  - proxy-groups.0.proxies.0+⚖️ 负载均衡-轮询

# 添加规则
prepend-rules:
  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,local.adguard.org,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - DOMAIN,injections.adguard.org, 🔰 选择节点
  - DOMAIN,akamaized.net, 🔰 选择节点
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,🛑 广告拦截
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,DIRECT
  - DOMAIN-SUFFIX,hust.edu.cn,DIRECT
  - RULE-SET,google,🔰 选择节点
  - RULE-SET,tld-not-cn,🔰 选择节点
  - DOMAIN-SUFFIX,aka.ms,🔰 选择节点
  - DOMAIN-SUFFIX,bing.com,🔰 选择节点
  - DOMAIN-SUFFIX,github.com,🔰 选择节点
  - DOMAIN-SUFFIX,typora.io,🔰 选择节点
  - RULE-SET,gfw,🔰 选择节点
  - RULE-SET,greatfire,🔰 选择节点
  - RULE-SET,telegramcidr,🔰 选择节点
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - GEOIP,CN,DIRECT
  - RULE-SET,direct,DIRECT
  - RULE-SET,proxy,🔰 选择节点
  - MATCH,🐟 漏网之鱼
# 添加规则集
mix-rule-providers:
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 86400

  google:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./ruleset/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 86400

  greatfire:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"
    path: ./ruleset/greatfire.yaml
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 86400
